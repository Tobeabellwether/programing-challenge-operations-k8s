- name: Clone GCP Compute Persistent Disk CSI Driver repository
  ansible.builtin.git:
    repo: "{{ db_gce_pd_driver_repo }}"
    dest: "{{ db_go_path }}/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver"
    version: "release-1.12"

- name: Copy GCP service account key to remote
  ansible.builtin.copy:
    src: "{{ gcp_service_account_file }}"
    dest: "/tmp/service-account-key.json"
    mode: "400"

- name: Authenticate with GCP using service account key
  ansible.builtin.command: gcloud auth activate-service-account --key-file /tmp/service-account-key.json
  changed_when: false

- name: Remove service account key from remote
  ansible.builtin.file:
    path: /tmp/service-account-key.json
    state: absent

- name: Get info of service accounts
  google.cloud.gcp_iam_service_account_info:
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ gcp_service_account_file }}"
  register: service_account_info
  delegate_to: localhost
  become: false

- name: Check if GCE PV service account exists
  ansible.builtin.set_fact:
    db_account_exists: "{{ service_account_info.resources | json_query(query) | length > 0 }}"
  vars:
    query: "[?contains(name, '{{ db_gce_pd_sa_name }}')]"

- name: Run setup-project.sh script
  ansible.builtin.command: ./deploy/setup-project.sh
  args:
    chdir: "{{ db_go_path }}/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver"
  environment:
    GOPATH: "{{ db_go_path }}"
    PROJECT: "{{ gcp_project }}"
    GCE_PD_SA_NAME: "{{ db_gce_pd_sa_name }}"
    GCE_PD_SA_DIR: "{{ db_gce_pd_sa_dir }}"
    ENABLE_KMS: "{{ db_enable_kms }}"
    ENABLE_KMS_ADMIN: "{{ db_enable_kms_admin }}"
    GCE_PD_DRIVER_VERSION: "{{ db_gce_pd_driver_version }}"
  timeout: 600
  changed_when: false
  when: not db_account_exists

- name: Deploy the driver on Kubernetes cluster
  ansible.builtin.command: ./deploy/kubernetes/deploy-driver.sh
  args:
    chdir: "{{ db_go_path }}/src/sigs.k8s.io/gcp-compute-persistent-disk-csi-driver"
  environment:
    GOPATH: "{{ db_go_path }}"
    PROJECT: "{{ gcp_project }}"
    GCE_PD_SA_NAME: "{{ db_gce_pd_sa_name }}"
    GCE_PD_SA_DIR: "{{ db_gce_pd_sa_dir }}"
    ENABLE_KMS: "{{ db_enable_kms }}"
    ENABLE_KMS_ADMIN: "{{ db_enable_kms_admin }}"
    GCE_PD_DRIVER_VERSION: "{{ db_gce_pd_driver_version }}"
  changed_when: false
  when: not db_account_exists

- name: Create StorageClass csi-gce-pd
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: "{{ db_storage_class_name }}"
      provisioner: pd.csi.storage.gke.io
      parameters:
        type: pd-standard
      volumeBindingMode: WaitForFirstConsumer
