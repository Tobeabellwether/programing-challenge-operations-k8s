- name: Enable Compute Engine API
  ansible.builtin.command: gcloud services enable compute.googleapis.com --project {{ gcp_project }}
  changed_when: false

- name: Enable Cloud Resource Manager API
  ansible.builtin.command: gcloud services enable cloudresourcemanager.googleapis.com --project {{ gcp_project }}
  changed_when: false

- name: Enable IAM API
  ansible.builtin.command: gcloud services enable iam.googleapis.com --project {{ gcp_project }}
  changed_when: false

- name: Create GCP instances
  google.cloud.gcp_compute_instance:
    name: "{{ vm_prefix }}-{{ item }}"
    project: "{{ gcp_project }}"
    auth_kind: serviceaccount
    service_account_file: "{{ service_account_file }}"
    metadata:
      ssh-keys: "{{ user_name }}:{{ lookup('file', ssh_key_public_local) }}"
    zone: "{{ gcp_zone }}"
    machine_type: "{{ vm_type }}"
    can_ip_forward: true
    tags:
      items:
        - http-server
        - https-server
    disks:
      - auto_delete: true
        boot: true
        initialize_params:
          source_image: "{{ vm_image }}"
          disk_size_gb: "{{ vm_disk_size }}"
    network_interfaces:
      - network:
          selfLink: "global/networks/default"
        access_configs:
          - name: External NAT
            type: ONE_TO_ONE_NAT
    state: present
  loop: "{{ range(1, node_count + 1) | list }}"
  register: gcp_instances

- name: Generate inventory file
  ansible.builtin.template:
    src: hosts.j2
    dest: "./inventory/hosts.ini"
    mode: '0644'
